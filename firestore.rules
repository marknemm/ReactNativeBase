rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function optional(key) {
      return !request.resource.data.keys().hasAny([key])
          || request.resource.data[key] == null;
    }

    match /users/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    match /groups/{groupId} {
      function isGroupValid() {
        return (request.resource.data.description is string || optional('description'))
            && request.resource.data.members is map
            && request.resource.data.name is string
            && request.resource.data.visibility in ['private', 'public'];
      }

      function isAdmin() {
        return resource.data.members[request.auth.uid] == 'admin';
      }

      function isEditor() {
        return resource.data.members[request.auth.uid] in ['admin', 'editor'];
      }

      function isMember() {
        return resource.data.members[request.auth.uid] != null;
      }

      function isPublic() {
        return resource.data.visibility == 'public';
      }

      allow read: if isPublic() || isMember();
      allow create: if isGroupValid();
      allow update: if isEditor()
                    && isGroupValid()
                    && (request.resource.data.members == resource.data.members || isAdmin());
      allow delete: if isAdmin();
    }

  }
}
